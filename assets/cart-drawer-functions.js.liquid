function openCartDrawer() {
    document.querySelector('.cart-drawer').classList.add('cart-drawer--active');
};


function updateCartItemCounts(count) {
    const countNum = document.querySelector(".cart-count span");

    countNum.textContent = count;
    if (countNum) {
        countNum.classList.add('bump');
        setTimeout(() => countNum.classList.remove('bump'), 300);
    }
}


// Update cart
async function updateCartDrawer() {
    const res = await fetch('/?section_id=cart-drawer');
    const text = await res.text(); // get raw HTML string
    // console.log(text)
    // parsing the html 
    const parsedHTML = new DOMParser().parseFromString(text, 'text/html');
    const newCartDrawer = parsedHTML.querySelector('.cart-drawer');
    const currentCartDrawer = document.querySelector('.cart-drawer');

    if (newCartDrawer && currentCartDrawer) {
        currentCartDrawer.innerHTML = newCartDrawer.innerHTML;
    }

    addCartDrawerEventListeners();

}



function addCartDrawerEventListeners() {
    // update quantites
    document.querySelectorAll('.cart-drawer-quantity-selector button').forEach(
        (btn) => {

            btn.addEventListener('click', async () => {
                // get line item key 
                const rootItem = btn.parentElement.parentElement.parentElement.parentElement.parentElement;
                console.log(rootItem);
                const key = rootItem.getAttribute("data-line-item-key");


                // get new quantity 
                const currentQantity = Number(btn.parentElement.querySelector("input").value);
                const isUp = btn.classList.contains("cart-drawer-quantity-selector-plus");
                const newQuantity = isUp ? currentQantity + 1 : currentQantity - 1;


                console.log(currentQantity, isUp, newQuantity, key)
                // ajax update
                const res = await fetch("/cart/update.js", {
                    method: "post",
                    headers: {
                        Accept: "application/json",
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ updates: { [key]: newQuantity } }),
                });
                const cart = await res.json();

                console.log(cart)

                // update cart
                updateCartDrawer();

                updateCartItemCounts(cart.item_count);


            })

        }
    )


    document.querySelector('.cart-drawer-box').addEventListener('click', (e) => {
        e.stopPropagation()
    });

}




document.querySelectorAll('form[action="/cart/add"]').forEach(form => {

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // submit form with ajax
        await fetch("/cart/add", {
            method: "post",
            body: new FormData(form)
        })



        // Get cart count
        const res = await fetch("/cart.js");
        const cart = await res.json();
        updateCartItemCounts(cart.item_count);

        // update cart
        await updateCartDrawer()
        // cart drawer open 
        openCartDrawer();




    })
})

// close cart drawer
document.querySelectorAll('.cart-drawer-header-right-close, .cart-drawer').forEach((el) => {
    el.addEventListener('click', (e) => {
        document.querySelector('.cart-drawer').classList.remove('cart-drawer--active');
    })
})

document.querySelector('.cart-drawer-box').addEventListener('click', (e) => {
    e.stopPropagation()
});


addCartDrawerEventListeners();

document.querySelectorAll('a[href="/cart"]').forEach((a) => {
    a.addEventListener("click", (e) => {
        e.preventDefault();
        openCartDrawer();
    });
});